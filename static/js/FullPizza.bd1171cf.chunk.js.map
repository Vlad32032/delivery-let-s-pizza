{"version":3,"file":"static/js/FullPizza.bd1171cf.chunk.js","mappings":"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","sources":["webpack://diliveri-let-s-pizza/./src/components/PizzaById/PizzaById.module.scss?c519","components/PizzaById/PizzaById.tsx","pages/FullPizza.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"PizzaById\":\"PizzaById_PizzaById__kspFL\",\"wrapperImg\":\"PizzaById_wrapperImg__JdTvD\",\"img1\":\"PizzaById_img1__YMuJX\",\"img2\":\"PizzaById_img2__CcxOK\",\"img3\":\"PizzaById_img3__gX9mt\",\"wrapperDescription\":\"PizzaById_wrapperDescription__CEww5\"};","import { FC, useState } from \"react\";\r\n\r\nimport { dataTypesDough } from \"../../assets/data/data\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { IPizza } from \"../../redyx/slices/pizzasSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redyx/hooks/hooks\";\r\nimport { addCartItem, countCart } from \"../../redyx/slices/cartSlice\";\r\n\r\nimport styles from \"./PizzaById.module.scss\" \r\n\r\nconst PizzaById: FC<IPizza> = ({ id, title, description, imageUrl, prices, sizes, types }) => {\r\n    const typesDough = dataTypesDough;\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [activeSize, setActiveSize] = useState(sizes[0]);\r\n    const [activePrice, setActivePrise] = useState(prices[0]);\r\n    const [activeType, setActiveType] = useState(types[0]);\r\n    const [activeImg, setActiveImg] = useState(1);\r\n\r\n    const pizzaId = Number(`${activeType + 1}${activeSize}${id}`);\r\n\r\n    const cartItem = useAppSelector((state) => state.cart.cartItems.find((obj) => obj.id === pizzaId));\r\n\r\n    const addPizzaToCart = () => {\r\n        const item = {\r\n            id: pizzaId, \r\n            title,\r\n            imageUrl: imageUrl[0],\r\n            price: activePrice + (activeType * 100), \r\n            size: activeSize,\r\n            type: typesDough[activeType],\r\n            count: 1,\r\n        };\r\n\r\n        dispatch(addCartItem(item));\r\n        dispatch(countCart());\r\n    };\r\n\r\n    const onSizeClick = (size: number, i: number) => {\r\n        setActiveSize(size);\r\n        setActivePrise(prices[i]);\r\n        setActiveImg(i + 1)\r\n    };\r\n\r\n    return (\r\n        <div className={styles.PizzaById}>\r\n            <div className={styles.wrapperImg}>\r\n                <img\r\n                    className={styles[`img${activeImg}`]}\r\n                    src={imageUrl[activeImg]}\r\n                    alt=\"Pizza\"\r\n                />\r\n            </div>\r\n\r\n            <div className={styles.wrapperDescription}>\r\n                <h2>{title}</h2>\r\n\r\n                <p>{`${activeSize}см ${typesDough[activeType]} тесто`}</p>\r\n\r\n                <p>{description}</p>\r\n\r\n                <div className=\"pizza-block__selector\">\r\n                    <ul>\r\n                        {types.map((type) => {\r\n                            return (\r\n                                <li\r\n                                    key={typesDough[type]}\r\n                                    onClick={() => setActiveType(type)}\r\n                                    className={activeType === type ? 'active' : ''}\r\n                                >\r\n                                    {typesDough[type]}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <ul>\r\n                        {sizes.map((size, i) => {\r\n                            return (\r\n                                <li\r\n                                    key={size}\r\n                                    onClick={() => onSizeClick(size, i)}\r\n                                    className={activeSize === size ? 'active' : ''}\r\n                                >\r\n                                    {size} см.\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"pizza-block__bottom\">\r\n                    <div className=\"pizza-block__price\">{activePrice + (activeType * 100)} ₽</div>\r\n                    <button onClick={addPizzaToCart} className=\"button button--outline button--add\">\r\n                        <svg\r\n                            width=\"12\"\r\n                            height=\"12\"\r\n                            viewBox=\"0 0 12 12\"\r\n                            fill=\"none\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                                fill=\"white\"\r\n                            />\r\n                        </svg>\r\n                        <span>Добавить</span>\r\n                        { cartItem && (\r\n                            <i>{cartItem.count}</i>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n\r\n                <Link to={'/'}>\r\n                    <button className=\"button button--outline button--add\">Вернуться назад</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PizzaById;","import { FC, useEffect } from \"react\";\r\n\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../redyx/hooks/hooks\";\r\nimport { fetchPizzaById, selectPizzasState } from \"../redyx/slices/pizzasSlice\";\r\nimport PizzaById from \"../components/PizzaById/PizzaById\";\r\n\r\nconst FullPizza: FC = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch();\r\n\r\n    const { id } = useParams();\r\n    const url = `https://66913f9226c2a69f6e8f1533.mockapi.io/pizzas/${id}`;\r\n\r\n    const { pizzaById, status } = useAppSelector(selectPizzasState);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPizzaById(url));\r\n    }, []);\r\n\r\n    if (status === 'error') {\r\n        navigate('/error');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {status === 'loading' && (\r\n                <div>Loading...</div>\r\n            )}\r\n            {pizzaById && <PizzaById {...pizzaById}/>}\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default FullPizza;"],"names":["_ref","id","title","description","imageUrl","prices","sizes","types","typesDough","dataTypesDough","dispatch","useAppDispatch","activeSize","setActiveSize","useState","activePrice","setActivePrise","activeType","setActiveType","activeImg","setActiveImg","pizzaId","Number","concat","cartItem","useAppSelector","state","cart","cartItems","find","obj","_jsxs","className","styles","PizzaById","children","_jsx","wrapperImg","src","alt","wrapperDescription","map","type","onClick","size","i","onSizeClick","addPizzaToCart","item","price","count","addCartItem","countCart","width","height","viewBox","fill","xmlns","d","Link","to","FullPizza","navigate","useNavigate","useParams","url","pizzaById","status","selectPizzasState","useEffect","fetchPizzaById"],"sourceRoot":""}